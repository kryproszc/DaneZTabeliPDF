random_stochastic_parameters <- function(sigma_j, dev, sd, dimension) {
  rng <- PCG64Generator()
  
  # Inicjalizujemy macierze jako NULL, aby je dynamicznie alokować później
  stochastic_sigma_j <- matrix(0, nrow = dimension[3], ncol = dimension[4])
  mu_j <- matrix(0, nrow = dimension[3], ncol = dimension[4])

  for (j in 1:dimension[4]) {
    # Wygenerowanie jednorazowo
    mu_j[, j] <- rng$normal(dev[j], sd[j], size = dimension[3])
    
    # Maksymalizowanie st_swobody
    st_swobody <- max(1, dimension[1] - j)
    
    # Generowanie wartości chi_squared tylko raz dla każdej iteracji j
    chi_list <- rng$chi_squared(st_swobody, size = dimension[3])
    
    # Obliczanie stochastic_sigma_j
    stochastic_sigma_j[, j] <- (ceiling(chi_list) * sigma_j[j]) / st_swobody
  }
  
  list(mu_j, stochastic_sigma_j)
}
