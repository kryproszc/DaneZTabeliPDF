#include <iostream>
#include <winsock2.h>

#pragma comment(lib, "Ws2_32.lib")

void printLastError(const std::string& function) {
    int error = WSAGetLastError();
    LPVOID lpMsgBuf;
    FormatMessage(
        FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS,
        NULL,
        error,
        MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),
        (LPTSTR) &lpMsgBuf,
        0, NULL);

    std::cerr << function << " failed with error: " << error << " - " << (char*)lpMsgBuf << std::endl;
    LocalFree(lpMsgBuf);
}

int main() {
    WSADATA wsaData;
    SOCKET ConnectSocket = INVALID_SOCKET;
    int iResult;

    // Initialize Winsock
    iResult = WSAStartup(MAKEWORD(2, 2), &wsaData);
    if (iResult != 0) {
        printLastError("WSAStartup");
        return 1;
    }
    std::cerr << "WSAStartup succeeded" << std::endl;

    // Create a SOCKET for connecting to server
    ConnectSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
    if (ConnectSocket == INVALID_SOCKET) {
        printLastError("socket");
        WSACleanup();
        return 1;
    }
    std::cerr << "Socket created successfully" << std::endl;

    closesocket(ConnectSocket);
    WSACleanup();
    return 0;
}
