punkty_przypisane_wielokrotnie <- punkty_gminy %>%
  group_by(REGON) %>%
  summarise(ilosc_budynkow = sum(ilosc, na.rm = TRUE), liczba_punktow = n())

# Sprawdzenie, czy liczba punktów jest większa niż liczba budynków
cat("Liczba gmin, do których przypisano punkty więcej niż raz:", 
    nrow(punkty_przypisane_wielokrotnie %>% filter(liczba_punktow > 1)), "\n")
print(punkty_przypisane_wielokrotnie %>% filter(liczba_punktow > 1))


# Sprawdzenie sumy budynków dla każdego REGON po `left_join`
suma_po_join <- gminy_z_budynkami %>%
  group_by(REGON) %>%
  summarise(suma_budynkow = sum(total_budynkow, na.rm = TRUE))

# Sprawdzenie, czy są różnice między `suma_po_join` a `wynik_gminy_df`
roznice_suma <- anti_join(suma_po_join, wynik_gminy_df, by = "REGON")
cat("Liczba REGON z różnicą w sumie budynków po `left_join`:", nrow(roznice_suma), "\n")
print(roznice_suma)

# Usunięcie powtórzeń `total_budynkow` po `left_join`
gminy_z_budynkami_bez_powtorzen <- gminy_z_budynkami %>%
  group_by(REGON) %>%
  summarise(total_budynkow = sum(total_budynkow, na.rm = TRUE))

# Obliczenie sumy liczby budynków po usunięciu powtórzeń
suma_po_usunieciu_powtorzen <- sum(gminy_z_budynkami_bez_powtorzen$total_budynkow, na.rm = TRUE)
cat("Suma liczby budynków po usunięciu powtórzeń:", suma_po_usunieciu_powtorzen, "\n")
