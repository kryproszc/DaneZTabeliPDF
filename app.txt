# Wektor danych
data_vector <- c(2, 8, 1, 4, 9, 5, 3, 7, 6, 10)  # Zmień na swoje dane

# Kwantyle
quantiles <- c(0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99)

# Obliczanie wartości kwantyli
quantile_values <- quantile(data_vector, probs = quantiles)

# Tworzenie ramki danych dla ggplot
df <- data.frame(Quantiles = quantiles, Values = quantile_values)

# Wprowadzenie wartości
input_values <- c(X = 5, Y = 7, Z = 9)  # Zmień na swoje wartości

# Obliczenie odpowiadających kwantyli dla podanych wartości
input_quantiles <- sapply(input_values, function(value) ecdf(data_vector)(value))

# Wykres
plot <- ggplot(df, aes(x = Quantiles, y = Values)) +
  geom_line(aes(color = "Bootstrap"), size = 1.2) +
  geom_point(aes(color = "Bootstrap"), size = 3) +
  geom_vline(aes(xintercept = input_quantiles["X"], color = "X"), linetype = "dashed", size = 1) +
  geom_vline(aes(xintercept = input_quantiles["Y"], color = "Y"), linetype = "dashed", size = 1) +
  geom_vline(aes(xintercept = input_quantiles["Z"], color = "Z"), linetype = "dashed", size = 1) +
  scale_x_continuous(breaks = quantiles) +
  scale_color_manual(name = "Legenda", values = c("Bootstrap" = "blue", "X" = "green", "Y" = "orange", "Z" = "purple")) +
  labs(title = "Wykres kwantyli",
       x = "Kwantyle",
       y = "Wartości kwantyli") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
        plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "top")

# Wyświetlenie wykresu
print(plot)

# Zapisanie wykresu do pliku
ggsave("wykres_kwantyli.png", plot = plot, path = "sciezka/do/folderu", width = 8, height = 6)
