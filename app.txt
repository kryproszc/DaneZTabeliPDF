    def normal(self, mean=0.0, std_dev=1.0, size=1):
        NV_MAGICCONST = 4 * np.exp(-0.5) / np.sqrt(2.0)
        samples = []
        while len(samples) < size:
            u1 = self.pcg.random()
            u2 = 1.0 - self.pcg.random()
            z = NV_MAGICCONST * (u1 - 0.5) / u2
            zz = z * z / 4.0
            if zz <= -np.log(u2):
                samples.append(mean + z * std_dev)
        return np.array(samples[:size])