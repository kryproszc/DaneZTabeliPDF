df_joined$ilosc[df_joined$ilosc == 0] <- 0.1

# Podział wartości `ilosc` na dwie grupy:
# - Pierwsza grupa to wartości < 1 (przypisujemy je do pierwszego przedziału ręcznie)
# - Druga grupa to wartości >= 1 (na podstawie tych wartości utworzymy dynamiczne przedziały)
values_above_1 <- df_joined$ilosc[df_joined$ilosc >= 1]

# Wyznaczenie dynamicznych przedziałów dla wartości >= 1
# Używamy `classIntervals` do dynamicznego podziału na 5 przedziałów
intervals <- classIntervals(values_above_1, n = 5, style = "quantile")

# Połączenie ręcznie ustalonego przedziału [0, 0.1] z automatycznie wyznaczonymi przedziałami od 1 w górę
breaks <- c(0, 0.1, intervals$brks)
breaks <- unique(breaks)  # Usunięcie duplikatów na wypadek powtarzających się wartości
print(breaks)

# Tworzenie etykiet tylko dla przedziałów >= 1
labels <- c(
  "[0, 0.1)",  # Ręcznie ustalona etykieta dla przedziału, która NIE będzie wyświetlana w legendzie
  sprintf("[%.1f, %.1f)", breaks[-c(1, length(breaks))], breaks[-1])
)

# Stworzenie kategorii na podstawie dynamicznych przedziałów
df_joined$ilosc_category <- cut(
  df_joined$ilosc,
  breaks = breaks,
  include.lowest = TRUE,
  labels = labels,
  right = FALSE  # Przedziały są lewostronnie zamknięte, prawostronnie otwarte
)

# 2. Filtrowanie legendy - wykluczenie przedziałów mniejszych niż 1

# Zachowanie tylko przedziałów >= 1 w legendzie
categories_for_legend <- levels(df_joined$ilosc_category)[-1]  # Wykluczenie pierwszego przedziału `[0, 0.1)`
df_joined$ilosc_category_filtered <- df_joined$ilosc_category  # Skopiowanie kolumny kategorii

# Zamiana wartości `[0, 0.1)` na NA, aby ukryć w legendzie
df_joined$ilosc_category_filtered[df_joined$ilosc_category == "[0, 0.1)"] <- NA

# 3. Automatyczne ustalanie kolorów dla pozostałych kategorii

# Liczba unikalnych kategorii w `ilosc_category_filtered` (pomijając NA)
num_categories <- length(categories_for_legend)

# Automatyczne wygenerowanie palety kolorów na podstawie liczby kategorii
colors <- scales::hue_pal()(num_categories)  # Dynamiczna paleta kolorów dla przedziałów >= 1

# Tworzenie mapy z dynamicznymi przedziałami i odpowiednią legendą
ggplot(data = df_joined) +
  geom_sf(aes(fill = ilosc_category_filtered), color = "black", na.rm = TRUE) +  # Użycie `na.rm = TRUE`, aby pominąć kategorie NA
  scale_fill_manual(
    values = setNames(colors, categories_for_legend),  # Automatyczne przypisanie kolorów do kategorii >= 1
    name = "Liczba budynków",  # Tytuł legendy
    na.translate = FALSE,  # Ukrycie kategorii NA w legendzie
    labels = categories_for_legend  # Etykiety tylko dla przedziałów >= 1
  ) +
  theme_minimal() +
  labs(title = "Mapa gmin z dynamicznie podzielonymi przedziałami budynków") +
  theme(
    plot.title = element_text(hjust = 0.5),
    legend.position = "right"
  )
Wyjaśnieni
