library(httr)
library(jsonlite)  # Używane do parsowania odpowiedzi JSON, jeśli zwracane dane są w tym formacie

# Funkcja do pobierania współrzędnych na podstawie kodu pocztowego
get_coordinates_by_postcode <- function(postcode) {
  # Definiowanie URL serwera
  url <- "http://dft-everace:8080/search.php"
  
  # Przygotowanie zapytania z kodem pocztowym jako parametrem
  params <- list(q = URLencode(postcode))
  
  # Wysłanie zapytania HTTP GET do serwera
  response <- GET(url, query = params)
  
  # Sprawdzenie, czy odpowiedź jest prawidłowa (kod odpowiedzi 200)
  if (status_code(response) == 200) {
    # Pobranie treści odpowiedzi jako tekst
    content_text <- content(response, "text", encoding = "UTF-8")
    
    # Sprawdzenie, czy odpowiedź ma jakąkolwiek treść
    if (nchar(content_text) > 0) {
      print("Treść odpowiedzi z serwera:")
      print(content_text)
      
      # Jeśli odpowiedź jest w formacie JSON, parsowanie jej do listy
      response_json <- fromJSON(content_text, flatten = TRUE)
      
      # Wyświetlenie pełnej struktury odpowiedzi (dla debugowania)
      print("Odpowiedź w formacie listy:")
      print(response_json)
      
      # Wyodrębnienie współrzędnych z odpowiedzi
      if (!is.null(response_json$lat) & !is.null(response_json$lon)) {
        coordinates <- data.frame(
          latitude = as.numeric(response_json$lat),
          longitude = as.numeric(response_json$lon)
        )
        return(coordinates)
      } else {
        stop("Nie znaleziono współrzędnych w odpowiedzi.")
      }
    } else {
      stop("Odpowiedź z serwera jest pusta.")
    }
  } else {
    # Wyświetlenie błędu, jeśli odpowiedź nie jest prawidłowa
    stop(paste("Błąd podczas zapytania:", status_code(response)))
  }
}

# Przykładowe użycie funkcji z kodem pocztowym
coordinates <- get_coordinates_by_postcode("00-001")
