$(document).on('click', 'td', function() {
    var row = $(this).closest('tr').index();
    var col = $(this).index();
    console.log('Clicked cell: row ' + row + ', col ' + col); // Dodaj logowanie
    if ($(this).hasClass('highlighted')) {
        $(this).removeClass('highlighted');
        Shiny.setInputValue('clicked_cell', {row: row, col: col - 1, highlighted: false});
    } else {
        $(this).addClass('highlighted');
        Shiny.setInputValue('clicked_cell', {row: row, col: col - 1, highlighted: true});
    }
});

@reactive.Effect
@reactive.event(input.panel1_clicked_cell)
def update_clicked_cell1():
    cell = input.panel1_clicked_cell()
    if cell:
        print("Clicked cell:", cell)  # Debugowanie
        row, col, highlighted = cell['row'], cell['col'], cell['highlighted']
        current_cells = clicked_cells1.get()
        if highlighted:
            if (row, col) not in current_cells:
                current_cells.append((row, col))
                binary_df_inter.iat[row, col] = 0  # Update the value to 0
        else:
            if (row, col) in current_cells:
                current_cells.remove((row, col))
                binary_df_inter.iat[row, col] = 1  # Update the value to 1
        clicked_cells1.set(current_cells)
        update_trigger1.set(update_trigger1.get() + 1)  # Trigger re-render
        ratio_df.invalidate()  # Invalidate ratio_df to trigger recalculation


