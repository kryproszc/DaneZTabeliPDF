void processBudynki(const std::vector<std::string> &filename, std::string year)
{

    for (int i = 0; i < filename.size(); i++)
    {
        csvstream csvin(FOLDER_UBEZP + filename[i] + ".csv");

        std::map<std::string, std::string> row;

        int id_ubezp = 0;

        while (csvin >> row)
        {
            // std::cout << std::stod(row["Szerokosc"]) << std::endl;

            std::string dataPoczatku = row["DataPoczatku"];
            std::string dataKonca = row["DataKonca"];

            int reasekuracjaf = 9999;
            if (row["ReasekuracjaF"] == "")
            {
                reasekuracjaf = 9999;
            }
            else
            {
                try
                {
                    reasekuracjaf = std::stoi(row["ReasekuracjaF"]);
                }
                catch (const std::invalid_argument &e)
                {
                    reasekuracjaf = 9999;
                }
            }
            get_dates_within_year(dataPoczatku, dataKonca, std::stoi(year));
            processRow(
                dataPoczatku,
                dataKonca,
                std::stoi(row["WojUjednolicone"]),
                std::stod(row["Szerokosc"]),
                std::stod(row["Dlugosc"]),
                reasekuracjaf,
                std::stod(row["SumaUbezpieczenia"]),
                id_ubezp);
        }
    }
}