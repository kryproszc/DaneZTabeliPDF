    df_paid = reactive.Value(pd.DataFrame())
    df_incurred = reactive.Value(pd.DataFrame())

    @reactive.Effect
    @reactive.event(input.load_data)
    def load_data():
        file = input.file()
        sheet_name_paid = f"DFM paid ({input.sheet_name()})"
        sheet_name_incurred = f"DFM inccured ({input.sheet_name()})"
        start_row = input.start_row() - 1  # Korekta dla indeksowania 0
        num_rows = input.num_rows()
        usecols = input.usecols()
        print(sheet_name_paid)
        print(sheet_name_incurred)
        if not file:
            df_paid.set(pd.DataFrame())
            df_incurred.set(pd.DataFrame())
        try:
            df_paid.set(
                pd.read_excel(file[0]['datapath'], sheet_name=sheet_name_paid, usecols=usecols, skiprows=start_row, nrows=num_rows)
            )
            df_incurred.set(
                pd.read_excel(file[0]['datapath'], sheet_name=sheet_name_incurred, usecols=usecols, skiprows=start_row, nrows=num_rows)
            )
        except Exception as e:
            print(f"Błąd wczytywania danych: {e}")
            df_paid.set(pd.DataFrame())
            df_incurred.set(pd.DataFrame())

    @reactive.Calc
    def triangle_paid():
        df = df_paid.get()
        return df  # Zwróć przetworzone dane

    @reactive.Calc
    def triangle_incurred():
        df = df_incurred.get()
        return df  # Zwróć przetworzone dane
