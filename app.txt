library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(readr)

# Funkcja do wczytywania i analizy danych
wczytaj_dane <- function(plik, kolumna) {
  # Wczytanie danych z wybranego pliku CSV
  dane <- read_csv(plik)
  
  # Wybór kolumny do analizy
  kolumna_analiza <- switch(kolumna,
                             "Brutto" = Brutto,
                             "Brutto_kat" = Brutto_kat,
                             "Netto" = Netto,
                             "Netto_kat" = Netto_kat)
  
  # Obliczenie kwantyli
  kwantyle <- quantile(dane[[kolumna_analiza]])
  
  # Tabela z kwantylami
  tabela_kwantyli <- data.frame(Kwantyl = names(kwantyle), Wartosc = as.numeric(kwantyle))
  
  # Wykres kwantyli
  wykres_kwantyli <- ggplot(data = tabela_kwantyli, aes(x = Kwantyl, y = Wartosc)) +
    geom_point() +
    labs(title = "Wykres kwantyli", x = "Kwantyl", y = "Wartość kwantyla")
  
  # Histogram
  histogram <- ggplot(data = dane, aes(x = !!sym(kolumna_analiza))) +
    geom_histogram(binwidth = 50, fill = "skyblue", color = "black") +
    labs(title = "Histogram", x = kolumna, y = "Liczba obserwacji")
  
  # Zwrócenie listy zawierającej wykresy i tabelę
  return(list(tabela_kwantyli = tabela_kwantyli, wykres_kwantyli = wykres_kwantyli, histogram = histogram))
}

# Definicja interfejsu aplikacji Shiny
ui <- fluidPage(
  titlePanel("Analiza danych CSV"),
  sidebarLayout(
    sidebarPanel(
      fileInput("plik", "Wybierz plik CSV"),
      selectInput("kolumna", "Rodzaj analizy", choices = c("Brutto", "Brutto_kat", "Netto", "Netto_kat"))
    ),
    mainPanel(
      tabsetPanel(
        tabPanel("Tabela kwantyli", tableOutput("tabela_kwantyli")),
        tabPanel("Wykres kwantyli", plotlyOutput("wykres_kwantyli")),
        tabPanel("Histogram", plotlyOutput("histogram"))
      )
    )
  )
)

# Definicja serwera aplikacji Shiny
server <- function(input, output) {
  # Funkcja wywoływana po wybraniu pliku i kolumny
  dane_wykresy <- reactive({
    req(input$plik)
    wczytaj_dane(input$plik$datapath, input$kolumna)
  })
  
  # Wyświetlenie tabeli kwantyli
  output$tabela_kwantyli <- renderTable({
    if (is.null(input$plik)) {
      return("Wczytaj dane")
    } else {
      dane_wykresy()$tabela_kwantyli
    }
  })
  
  # Wyświetlenie wykresu kwantyli
  output$wykres_kwantyli <- renderPlotly({
    if (is.null(input$plik)) {
      return(NULL)
    } else {
      dane_wykresy()$wykres_kwantyli
    }
  })
  
  # Wyświetlenie histogramu
  output$histogram <- renderPlotly({
    if (is.null(input$plik)) {
      return("Wczytaj dane")
    } else {
      dane_wykresy()$histogram
    }
  })
}

# Uruchomienie aplikacji Shiny
shinyApp(ui = ui, server = server)