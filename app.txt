import os
import pandas as pd
import concurrent.futures
from geopy.geocoders import Nominatim

# Funkcja do geokodowania adresu
def geocode_address(address):
    geolocator = Nominatim(user_agent="geocoding_app")
    location = geolocator.geocode(address)
    if location:
        return location.latitude, location.longitude
    else:
        return None, None

# Funkcja do geokodowania dataframe
def geocode_dataframe(df):
    df['Latitude'], df['Longitude'] = zip(*df['Adres'].apply(geocode_address))
    return df

# Główna funkcja
def main():
    input_folder = 'Przed_Geokodowaniem'
    output_folder = 'Po_Geokodowaniu'

    # Upewnienie się, że folder wyjściowy istnieje
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)

    # Przetwarzanie każdego pliku CSV w folderze wejściowym
    for filename in os.listdir(input_folder):
        if filename.endswith('.csv'):
            input_file = os.path.join(input_folder, filename)
            output_file = os.path.join(output_folder, filename)

            # Wczytanie danych do dataframe
            df = pd.read_csv(input_file)

            # Obliczenie połowy dostępnych wątków
            max_threads = int(concurrent.futures.thread._threads_queues._maxsize / 2)

            # Geokodowanie adresów równolegle z połową wątków
            with concurrent.futures.ThreadPoolExecutor(max_workers=max_threads) as executor:
                dfs = executor.map(geocode_dataframe, [df])

            # Zapis danych do pliku CSV
            for df in dfs:
                df.to_csv(output_file, index=False)
                print(f'Przetworzono plik: {filename}')

if __name__ == "__main__":
    main()