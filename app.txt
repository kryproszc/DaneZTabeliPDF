import pandas as pd
import re

# Przykładowy DataFrame
data = {
    'Adres ubezpieczonego obiektu - Ulica i numer': ['.123', ',456', '(789', '-012', '|345', '_678'],
    'Adres ubezpieczonego obiektu - Kod pocztowy': ['12-345', '34-567', '56-789', '78-012', '90-123', '12-34A'],
    'Adres ubezpieczonego obiektu - Miasto': ['Miasto1', 'Miasto2', 'Miasto3', 'Miasto4', 'Miasto5', 'Miasto6']
}
DaneObiekty = pd.DataFrame(data)

# Funkcja sprawdzająca pierwszy znak
def first_char_check(value):
    if not isinstance(value, str):
        return False
    return value[0] in {'.', ',', '(', '-', '|', '_'}

# Funkcja sprawdzająca format kodu pocztowego
def postal_code_check(value):
    if not isinstance(value, str):
        return False
    return bool(re.match(r'^\d{2}-\d{3}$', value))

# Tworzenie maski dla pierwszego znaku
mask_first_char = DaneObiekty['Adres ubezpieczonego obiektu - Ulica i numer'].apply(first_char_check)

# Tworzenie maski dla formatu kodu pocztowego
mask_postal_code = DaneObiekty['Adres ubezpieczonego obiektu - Kod pocztowy'].apply(postal_code_check)

# Sprawdzenie obu warunków i połączenie z poprzednim warunkiem
a = pd.notnull(DaneObiekty['Adres ubezpieczonego obiektu - Ulica i numer']) & (
    pd.notnull(DaneObiekty['Adres ubezpieczonego obiektu - Kod pocztowy']) | 
    pd.notnull(DaneObiekty['Adres ubezpieczonego obiektu - Miasto'])
) & mask_first_char & mask_postal_code

print(a)
