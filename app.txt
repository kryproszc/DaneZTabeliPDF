library(httr)        # Do wysyłania zapytań HTTP
library(jsonlite)    # Do pracy z danymi JSON
library(dplyr)       # Do przetwarzania danych

get_coordinates_by_postcode <- function(data) {
  # Sprawdzenie początkowej sumy ilości budynków
  initial_sum <- sum(data$ilosc, na.rm = TRUE)
  cat("Początkowa suma ilości budynków:", initial_sum, "\n")
  
  # Inicjalizacja pustego data.frame z odpowiednimi kolumnami
  results <- data.frame(latitude = numeric(0), longitude = numeric(0), ilosc = numeric(0), kody = character(0))
  
  # Iteracja przez wszystkie wiersze w danych wejściowych
  for (i in 1:nrow(data)) {
    postcode <- data$kody[i]
    ilosc <- data$ilosc[i]
    
    # Definicja adresu URL API
    url <- "http://dft-everace:8080/search.php"
    params <- list(q = postcode)
    
    # Wysłanie zapytania GET do API
    response <- GET(url, query = params)
    
    # Sprawdzenie, czy odpowiedź jest poprawna (kod statusu 200)
    if (status_code(response) == 200) {
      content_text <- content(response, "text", encoding = "UTF-8")
      response_json <- fromJSON(content_text, flatten = TRUE)
      
      # Sprawdzenie, czy współrzędne są dostępne w odpowiedzi
      if (!is.null(response_json$lat) && !is.null(response_json$lon)) {
        # Tworzenie nowego wiersza wynikowego z danymi geograficznymi, ilością budynków i kodem
        result_row <- data.frame(
          latitude = response_json$lat,
          longitude = response_json$lon,
          ilosc = ilosc,
          kody = postcode
        )
        
        # Dodanie nowego wiersza do wynikowego data.frame
        results <- rbind(results, result_row)
      } else {
        # Ostrzeżenie w przypadku braku współrzędnych
        warning(paste("Brak danych geograficznych dla kodu:", postcode))
      }
    } else {
      # Ostrzeżenie w przypadku błędu odpowiedzi z API
      warning(paste("Błąd podczas zapytania dla kodu:", postcode, " - Kod odpowiedzi:", status_code(response)))
    }
  }
  
  # Usunięcie duplikatów na podstawie kodu pocztowego i współrzędnych (jeśli istnieją powtórzenia)
  results <- results %>%
    distinct(latitude, longitude, kody, .keep_all = TRUE)
  
  # Sumowanie ilości budynków po przetworzeniu
  final_sum <- sum(results$ilosc, na.rm = TRUE)
  cat("Suma ilości budynków po przetworzeniu:", final_sum, "\n")
  
  # Sprawdzenie, czy suma budynków się zmieniła
  if (initial_sum != final_sum) {
    warning("Suma budynków po przetworzeniu jest inna niż przed przetworzeniem!")
  }
  
  # Sprawdzenie, czy wyniki są puste (brak współrzędnych)
  if (nrow(results) == 0) {
    stop("Brak danych geograficznych dla podanych kodów pocztowych.")
  }
  
  # Zwrócenie wynikowego data.frame z unikalnymi wartościami
  return(results)
}
