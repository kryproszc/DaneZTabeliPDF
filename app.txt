library(sf)
library(classInt)

# Przekształcenie wartości 0 na 0.1, aby uniknąć problemów z logarytmiczną transformacją
df_joined$ilosc[df_joined$ilosc == 0] <- 0.1

# Podział wartości `ilosc` na dynamiczne przedziały
values_above_1 <- df_joined$ilosc[df_joined$ilosc >= 1]  # Wartości >= 1

# Dynamiczne przedziały za pomocą `classIntervals` (podział na 10 przedziałów)
intervals <- classIntervals(values_above_1, n = 10, style = "quantile")

# Dodanie ręcznego przedziału dla wartości < 1
breaks <- c(0, 0.1, intervals$brks)
breaks <- unique(breaks)  # Usunięcie duplikatów

# Tworzenie etykiet dla przedziałów
labels <- c(
  "[0, 0.1)",  # Etykieta dla wartości < 1 (w tym przypadku do 0.1)
  sprintf("[%.1f, %.1f)", breaks[-c(1, length(breaks))], breaks[-c(1,2)])
)

# Przypisanie kategorii do danych
df_joined$ilosc_category <- cut(
  df_joined$ilosc,
  breaks = breaks,
  include.lowest = TRUE,
  labels = labels,
  right = FALSE
)

# Przypisanie `NA` dla wartości < 1, aby nie pokazywać ich w legendzie
df_joined$ilosc_category[df_joined$ilosc < 1] <- NA

# Sprawdzenie liczby obserwacji w każdej kategorii (w celu weryfikacji)
print(table(df_joined$ilosc_category, useNA = "ifany"))

# Definicja kolorów dla 10 przedziałów wartości >= 1
colors_above_1 <- RColorBrewer::brewer.pal(n = 10, name = "YlOrRd")  # Wybór palety `YlOrRd` dla 10 kolorów

# Sprawdzenie liczby poziomów w `ilosc_category` (pomijając `NA`)
levels_count <- length(levels(df_joined$ilosc_category)) - 1  # Liczba poziomów pomijając NA

# Kolory do użycia, gdzie `lightgray` dla `NA` (wartości < 1)
colors_to_use <- c("lightgray", colors_above_1[1:levels_count])

# Tworzenie pliku graficznego PNG i zapis w bieżącym katalogu roboczym
png(filename = "mapa_gmin_statyczna_10_przedzialow.png", width = 10, height = 8, units = "in", res = 300)

# Rysowanie mapy z przypisaniem kolorów do kategorii
plot(
  df_joined_simplified["ilosc_category"],
  col = colors_to_use,  # Przypisanie kolorów do kategorii
  main = "Mapa gmin z dynamicznie podzielonymi przedziałami budynków",
  key.pos = NULL  # Wyłączenie domyślnej legendy
)

# Dodanie legendy tylko dla wartości >= 1
legend("topright",
       legend = levels(df_joined$ilosc_category)[-1],  # Pominięcie etykiety dla NA
       fill = colors_above_1,  # Kolory tylko dla wartości >= 1
       title = "Liczba budynków",
       cex = 0.8,
       bg = "white",
       bty = "n")

# Zakończenie zapisywania do pliku
dev.off()
